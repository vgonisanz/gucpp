#####################################################################################################################################################################################
# This is a Modules CMake configuration script.
#   This script organize what modules compile according with user configuration.
# The steps are:
#   1ยบ Configure a header with options to use
#   2ยบ Configure options with differents libraries to be built
#   3ยบ Add module if option is TRUE
#####################################################################################################################################################################################

# Modules step I: Configure modules header in installation path. Never mix autogenerated headers with source code.
# ------------------------------------------------------------------------------------------------------
PRINT("Configuring ${PROJ_MAIN_NAME}_config.h ...")
configure_file("${CMAKE_CURRENT_SOURCE_DIR}/common/in/${PROJ_MAIN_NAME}_config.h.in"
                "${${PROJ_MAIN_NAME}_PATH_INSTALL}/common/include/${PROJ_MAIN_NAME}_config.h" )

PRINTSUBTITLE("   Adding modules...")

# Modules step II: Configure options with differents libraries to be built
# ------------------------------------------------------------------------------------------------------
OPTION(${PROJ_MAIN_NAME}_BUILD_PARSERS			"Compile module parsers" 								ON )
OPTION(${PROJ_MAIN_NAME}_BUILD_FILEOPERATION	"Compile module with filemanager and utils"				ON )
OPTION(${PROJ_MAIN_NAME}_BUILD_TEMPLATE         "Compile module template" 								ON )
OPTION(${PROJ_MAIN_NAME}_BUILD_FACADE			"Compile module facade" 								OFF ) # No ready
OPTION(${PROJ_MAIN_NAME}_BUILD_CALLBACKS 		"Compile module callbacks" 								ON )
OPTION(${PROJ_MAIN_NAME}_BUILD_COMMUNICATION	"Compile module communication" 							ON )
OPTION(${PROJ_MAIN_NAME}_BUILD_GEOMETRY2D	"Compile module geometry in 2D" 							ON )

# Modules step III: Add module if option is TRUE
# ------------------------------------------------------------------------------------------------------
IF(${PROJ_MAIN_NAME}_BUILD_TEMPLATE)
  ADD_SUBDIRECTORY(template)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_PARSERS)
  ADD_SUBDIRECTORY(parsers)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_FILEOPERATION)
  ADD_SUBDIRECTORY(fileoperations)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_FACADE)
  ADD_SUBDIRECTORY(facade)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_CALLBACKS)
  ADD_SUBDIRECTORY(callbacks)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_COMMUNICATION)
  ADD_SUBDIRECTORY(communication)
ENDIF()

IF(${PROJ_MAIN_NAME}_BUILD_GEOMETRY2D)
  ADD_SUBDIRECTORY(geometry2d)
ENDIF()

# Install common headers always, needed for all. TODO review why and explain. Works? why is here??? bad variables ${${PROJ_NAME}_HEADERS}
# ------------------------------------------------------------------------------------------------------
INSTALL(FILES ${${PROJ_NAME}_HEADERS}
        DESTINATION "${${PROJ_MAIN_NAME}_PATH_INSTALL}/${PROJ_MAIN_NAME}/common/include/"
        )
